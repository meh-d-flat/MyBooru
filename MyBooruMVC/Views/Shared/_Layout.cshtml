@using Microsoft.Extensions.Configuration;
@inject IConfiguration config
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>*@
    <script src="https://code.jquery.com/jquery-3.6.0.js"></script>
    <base href="/" />
    <!--so ajax requests get the right path-->

    <style type="text/css">

        #smth img {
            padding: 10px;
            margin: 0;
        }

        html, body {
            height: 100%;
        }

        body {
            margin-top: 65px;
            font-family: Arial, Helvetica, sans-serif;
            background-color: #444;
        }

        .nav {
            display: flex;
            overflow: hidden;
            background-color: #333;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 9999;
            width: 100%;
        }

            .nav #search {
                margin-top: 13px;
            }

            .nav a {
                display: inline-block;
                float: left;
                color: #fff;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
                font-size: 17px;
            }

                .nav a:hover {
                    background-color: #ddd;
                    color: black;
                }

        ul {
            list-style-type: none;
            color: white;
        }

        #username {
            display: inline-block;
            text-decoration: underline;
            font-weight: bold;
            padding: 0px;
            margin: 0px;
        }

        .topnav {
            overflow: hidden;
            background-color: #333;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 9999;
            width: 100%;
        }

            .topnav a {
                float: left;
                display: block;
                color: #fff;
                /*text-align: center;*/
                padding: 14px 16px;
                text-decoration: none;
                font-size: 17px;
            }

                .topnav a:hover {
                    background-color: #ddd;
                    color: black;
                }

            /*.topnav a.active {
          background-color: #2196F3;
          color: white;
        }*/

            .topnav .search-container {
                float: left;
                margin-left: 10px;
            }

            .topnav input[type=text] {
                padding: 6px;
                margin-top: 8px;
                font-size: 17px;
                border: none;
            }

        .topnav-right {
            float: right;
            text-align: right;
        }

        .topnav .search-container button {
            float: right;
            padding: 6px 10px;
            margin-top: 8px;
            margin-right: 16px;
            background: #ddd;
            font-size: 17px;
            border: none;
            cursor: pointer;
        }

            .topnav .search-container button:hover {
                background: #ccc;
            }

        @@media screen and (max-width: 620px) {
            body {
                margin-top: 280px;
            }

/*            .sidenav {
                margin-top: 200px;
            }*/

            .topnav .search-container {
                float: none;
                margin-top: 15px;
                margin-left: 0;
            }

                .topnav a, .topnav input[type=text], .topnav .search-container button {
                    float: none;
                    display: block;
                    text-align: left;
                    width: 100%;
                    margin: 0;
                    padding: 14px;
                }

            .topnav input[type=text] {
                border: 1px solid #ccc;
            }

            .topnav-right {
                width: 100%;
                float: left;
                text-align: left;
            }
        }
    </style>
</head>
<body>
    @*<div class="nav">*@
    <div class="topnav">
        @Html.ActionLink("Home", "Index", "Gallery")
        @Html.ActionLink("Upload", "Upload", "Gallery")
        <div class="search-container">
            <form action="/gallery/search" id="search-form" autocomplete="off">
                <input name="tags" type="text" id="search" />
                <ul id="results"></ul>
            </form>
        </div>
        <div class="topnav-right">
        </div>
    </div>

    <div>
        @RenderBody()
    </div>

    <script>
        const searchForm = document.getElementById("search-form");
        const searchInput = document.getElementById("search");
        const suggestions = document.getElementById("results");

        var thing = { length: -1, chars: "", data: [], isPerioded: true };
        var isLogged = false;
        var userData;

        searchInput.addEventListener("input", (e) => search(e, suggestions, retrieve, thing));
        searchForm.addEventListener("submit", () => formSubmit(searchInput));
        suggestions.addEventListener("click", (e) => submitEntry(e, searchInput, thing));

        $(document).ready(function () {
            ajaxGet("@config["ApiHost"]/api/user/getInfo",
                function (response) {
                    userData = response;
                    isLogged = true;
                    $(".topnav-right").append("<a href='/user'> Hi there, <div id='username'>" + response.username + "</div></a>");
                },
                function (jqXHR) {
                    isLogged = false;
                    $(".topnav-right").append("<a href='/user/login'>Sign in</a><a href='/user/register'>Sign up</a>");
                }, true
            );
        });

        function ajaxGet(getUrl, successFunc, errorFunc, sendCreds, dataObject) {
            $.ajax({
                url: getUrl,
                method: "GET",
                type: "GET",
                data: dataObject,
                xhrFields: {
                    withCredentials: sendCreds
                },
                success: function (response) {
                    successFunc(response);
                },
                error: function (jqXHR) {
                    errorFunc(jqXHR);
                }
            });
        }

        function formSubmit(input) {
            if (input.value.endsWith(","))
                input.value = input.value.slice(0, -1);
        };

        function submitEntry(e, input, obj) {
            const setValue = e.target.innerText;
            a = input.value;
            input.value = a.slice(0, a.lastIndexOf(",") + 1) + a.slice(a.lastIndexOf(",") + 1, a.length).replace(obj.chars, "");//yeah...
            input.value += setValue + (obj.isPerioded ? "," : "");
            obj.length = setValue.length;
            obj.chars = "";
            e.target.remove();
        }

        function getResults(input, func, obj) {
            const results = [];
            func(input, obj);
            for (i = 0; i < obj.data.length; i++) {
                if (input.localeCompare(obj.data[i].slice(0, input.length), undefined, { sensitivity: 'accent' }) == 0)
                    results.push(obj.data[i]);
            }
            return results;
        }

        function retrieve(str, obj) {
            ajaxGet("@config["ApiHost"]/api/tag", x => obj.data = x, null, false, { tagname: str });
        };

        //deleteContentBackward, deleteContentForward, insertFromPaste, insertText
        function search(e, suggest, func, obj) {
            let results = [];
            if (e.inputType == "insertText" || e.inputType == "insertFromPaste")
                obj.chars += e.data;
            if (e.inputType == "deleteContentBackward")
                obj.chars = obj.chars.slice(0, obj.chars.length - 1);

            const userInput = e.target.value;
            suggest.innerHTML = "";
            if (userInput.length > 0 || userInput.length > obj.length) {
                results = getResults(obj.chars, func, obj);
                suggest.style.display = "block";
                for (i = 0; i < results.length; i++) {
                    suggest.innerHTML += "<li style='border-bottom: 1px solid white;'>" + results[i] + "</li>";
                }
            }
        }
    </script>
</body>
</html>
